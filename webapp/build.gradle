
buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath 'io.ratpack:ratpack-gradle:1.4.2'
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
		classpath 'com.netflix.nebula:gradle-ospackage-plugin:3.5.0'
	}
}

plugins {
	id "com.moowork.node" version "1.1.1"
	id "de.richsource.gradle.plugins.typescript" version "1.8.0"	// see https://github.com/sothmann/typescript-gradle-plugin
}

apply plugin: 'idea'
apply plugin: 'io.ratpack.ratpack-groovy'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'nebula.ospackage'


// Closure 'mavenRepos' is in root build.gradle
repositories mavenRepos

dependencies {
	// We use the latest groovy 2.x version for building this library
	compile 'org.codehaus.groovy:groovy-all:2.4+'
	compile 'com.jayway.restassured:rest-assured:2.4.1'
	compile 'com.github.docker-java:docker-java:3.0.+'
	compile 'junit:junit:4.12'
	compile 'org.json:json:20140107'
	compile 'ch.qos.logback:logback-classic:1.0.13'
	compile 'org.slf4j:slf4j-api:1.7.12'
	compile 'org.slf4j:log4j-over-slf4j:1.7.12'
	compile 'org.neo4j.driver:neo4j-java-driver:1.0.6'
}

// -----------------------------------------------------

import com.moowork.gradle.node.NodeExtension
import com.moowork.gradle.node.variant.VariantBuilder

node {
	download = true
}

String nodeExecutable() {
	NodeExtension nodeExt = NodeExtension.get(project)
	return new VariantBuilder(nodeExt).build().nodeExec
}

compileTypeScript {
	outputDir = file("${buildDir}/resources/main/public")
	source = file('frontend/src')
	experimentalDecorators = true
	compilerExecutable "${nodeExecutable()} node_modules/typescript/lib/tsc.js"
	dependsOn "npmInstall"
}

processResources.dependsOn (npm_run_build)
